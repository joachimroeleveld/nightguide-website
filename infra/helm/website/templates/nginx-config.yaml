kind: ConfigMap
apiVersion: v1
metadata:
  name: website-nginx-config
data:
  nginx.conf: |-
    user nginx;
    worker_processes 1;

    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;
      keepalive_timeout 65;

      sendfile on;

      gzip on;
      gzip_vary on;
      gzip_min_length 10240;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types
        text/css
        text/plain
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        application/rss+xml
        application/atom_xml;

      proxy_read_timeout 5s;
      proxy_cache_path /var/cache/nginx/cache_content levels=1:2 keys_zone=cache_content:10m inactive=1d max_size=100m;
      proxy_cache cache_content;
      proxy_cache_valid 200 1h;
      proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
      proxy_cache_background_update on;

      server {
        listen 80;

        server_name {{ if .Values.ingress.enabled }}nightguide.app{{ else }}localhost{{ end }};

        location / {
          if ($http_x_forwarded_proto = "http") {
            return 301 https://$server_name$request_uri;
          }
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header HOST $http_host;
          proxy_pass http://localhost:8080;
          proxy_redirect off;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          add_header X-Cache-Status $upstream_cache_status;
        }
      }
      {{ if .Values.ingress.enabled }}

      server {
          server_name www.nightguide.app;
          return 301 https://nightguide.app$request_uri;
      }
      {{ end }}
    }
