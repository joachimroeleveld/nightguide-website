apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "website.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "website.name" . }}
    helm.sh/chart: {{ include "website.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "website.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "website.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.containers.nginx.repository }}:{{ .Values.containers.nginx.tag }}"
          imagePullPolicy: {{ .Values.containers.nginx.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              name: nginx-conf
              readOnly: false
          resources:
            {{- toYaml .Values.containers.nginx.resources | nindent 12 }}
        - name: website
          image: "{{ .Values.containers.website.repository }}:{{ .Values.containers.website.tag }}"
          imagePullPolicy: {{ .Values.containers.website.pullPolicy }}
          ports:
            - name: app
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: app
          readinessProbe:
            httpGet:
              path: /
              port: app
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: nginx-cache
          env:
            - name: BLOG_URL
              value: https://blog.nightguide.app/ghost/api/v2/content
            - name: BLOG_API_KEY
              value: 2f723111f699b7c3ce899ac4e3
            - name: API_URL
              value: https://api.nightguide.app
            - name: API_KEY
              value: nyfuUiZg9D@G^CFX^LtB
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "8080"
          resources:
            {{- toYaml .Values.containers.website.resources | nindent 12 }}
      volumes:
        - name: nginx-conf
          configMap:
            name: website-nginx-config
        - name: nginx-cache
          persistentVolumeClaim:
            claimName: website-nginx-cache
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
